enum EWeaponType
{
	WeapType_Pistol = 0,
	WeapType_Rifle = 1,
	WeapType_SMG = 2,
	WeapType_Sniper = 3,
	WeapType_KnifeType = 4,
	WeapType_Grenade = 5,
	WeapType_LMG = 6,
	WeapType_Shotgun = 7,
	WeapType_ZeusGun = 8,
	WeapType_C4Explosive = 9,
};

enum ESpectatorView
{
	SV_NotSpectating = 0,
	SV_DeathCam = 1,
	SV_FreezeCam = 2,
	SV_Fixed = 3,
	SV_FirstPerson = 4,
	SV_ThirdPerson = 5,
	SV_Free = 6,
};

enum ETeams : int
{
	Team_NoTeam = 0,
	Team_Spectator = 1,
	Team_Terrorists = 2,
	Team_CounterTerrorists = 3,
};

enum ItemDefinitionIndex
{
	WEAPON_DEAGLE = 1,
	WEAPON_ELITE = 2,
	WEAPON_FIVESEVEN = 3,
	WEAPON_GLOCK = 4,
	WEAPON_AK47 = 7,
	WEAPON_AUG = 8,
	WEAPON_AWP = 9,
	WEAPON_FAMAS = 10,
	WEAPON_G3SG1 = 11,
	WEAPON_GALILAR = 13,
	WEAPON_M249 = 14,
	WEAPON_M4A1 = 16,
	WEAPON_MAC10 = 17,
	WEAPON_P90 = 19,
	WEAPON_MP5_SD = 23,
	WEAPON_UMP45 = 24,
	WEAPON_XM1014 = 25,
	WEAPON_BIZON = 26,
	WEAPON_MAG7 = 27,
	WEAPON_NEGEV = 28,
	WEAPON_SAWEDOFF = 29,
	WEAPON_TEC9 = 30,
	WEAPON_TASER = 31,
	WEAPON_HKP2000 = 32,
	WEAPON_MP7 = 33,
	WEAPON_MP9 = 34,
	WEAPON_NOVA = 35,
	WEAPON_P250 = 36,
	WEAPON_SCAR20 = 38,
	WEAPON_SG556 = 39,
	WEAPON_SSG08 = 40,
	WEAPON_KNIFE = 42,
	WEAPON_FLASHBANG = 43,
	WEAPON_HEGRENADE = 44,
	WEAPON_SMOKEGRENADE = 45,
	WEAPON_MOLOTOV = 46,
	WEAPON_DECOY = 47,
	WEAPON_INCGRENADE = 48,
	WEAPON_C4 = 49,
	WEAPON_KNIFE_T = 59,
	WEAPON_M4A1_SILENCER = 60,
	WEAPON_USP_SILENCER = 61,
	WEAPON_CZ75A = 63,
	WEAPON_REVOLVER = 64,
	WEAPON_KNIFE_BAYONET = 500,
	WEAPON_KNIFE_CSS = 503,
	WEAPON_KNIFE_FLIP = 505,
	WEAPON_KNIFE_GUT = 506,
	WEAPON_KNIFE_KARAMBIT = 507,
	WEAPON_KNIFE_M9_BAYONET = 508,
	WEAPON_KNIFE_TACTICAL = 509,
	WEAPON_KNIFE_FALCHION = 512,
	WEAPON_KNIFE_SURVIVAL_BOWIE = 514,
	WEAPON_KNIFE_BUTTERFLY = 515,
	WEAPON_KNIFE_PUSH = 516,
	WEAPON_KNIFE_CORD = 517,
	WEAPON_KNIFE_CANIS = 518,
	WEAPON_KNIFE_URSUS = 519,
	WEAPON_KNIFE_GYPSY_JACKKNIFE = 520,
	WEAPON_KNIFE_OUTDOOR = 521,
	WEAPON_KNIFE_STILETTO = 522,
	WEAPON_KNIFE_WIDOWMAKER = 523,
	WEAPON_KNIFE_SKELETON = 525,
	GLOVE_STUDDED_BLOODHOUND = 5027,
	GLOVE_T_SIDE = 5028,
	GLOVE_CT_SIDE = 5029,
	GLOVE_SPORTY = 5030,
	GLOVE_SLICK = 5031,
	GLOVE_LEATHER_WRAP = 5032,
	GLOVE_MOTORCYCLE = 5033,
	GLOVE_SPECIALIST = 5034,
	GLOVE_HYDRA = 5035
};

enum ClassID {
	CTestTraceline = 223,
	CTEWorldDecal = 224,
	CTESpriteSpray = 221,
	CTESprite = 220,
	CTESparks = 219,
	CTESmoke = 218,
	CTEShowLine = 216,
	CTEProjectedDecal = 213,
	CFEPlayerDecal = 71,
	CTEPlayerDecal = 212,
	CTEPhysicsProp = 209,
	CTEParticleSystem = 208,
	CTEMuzzleFlash = 207,
	CTELargeFunnel = 205,
	CTEKillPlayerAttachments = 204,
	CTEImpact = 203,
	CTEGlowSprite = 202,
	CTEShatterSurface = 215,
	CTEFootprintDecal = 199,
	CTEFizz = 198,
	CTEExplosion = 196,
	CTEEnergySplash = 195,
	CTEEffectDispatch = 194,
	CTEDynamicLight = 193,
	CTEDecal = 191,
	CTEClientProjectile = 190,
	CTEBubbleTrail = 189,
	CTEBubbles = 188,
	CTEBSPDecal = 187,
	CTEBreakModel = 186,
	CTEBloodStream = 185,
	CTEBloodSprite = 184,
	CTEBeamSpline = 183,
	CTEBeamRingPoint = 182,
	CTEBeamRing = 181,
	CTEBeamPoints = 180,
	CTEBeamLaser = 179,
	CTEBeamFollow = 178,
	CTEBeamEnts = 177,
	CTEBeamEntPoint = 176,
	CTEBaseBeam = 175,
	CTEArmorRicochet = 174,
	CTEMetalSparks = 206,
	CSteamJet = 167,
	CSmokeStack = 157,
	DustTrail = 275,
	CFireTrail = 74,
	SporeTrail = 281,
	SporeExplosion = 280,
	RocketTrail = 278,
	SmokeTrail = 279,
	CPropVehicleDriveable = 144,
	ParticleSmokeGrenade = 277,
	CParticleFire = 116,
	MovieExplosion = 276,
	CTEGaussExplosion = 201,
	CEnvQuadraticBeam = 66,
	CEmbers = 55,
	CEnvWind = 70,
	CPrecipitation = 137,
	CPrecipitationBlocker = 138,
	CBaseTempEntity = 18,
	NextBotCombatCharacter = 0,
	CEconWearable = 54,
	CBaseAttributableItem = 4,
	CEconEntity = 53,
	CWeaponXM1014 = 272,
	CWeaponTaser = 267,
	CTablet = 171,
	CSnowball = 158,
	CSmokeGrenade = 155,
	CWeaponShield = 265,
	CWeaponSG552 = 263,
	CSensorGrenade = 151,
	CWeaponSawedoff = 259,
	CWeaponNOVA = 255,
	CIncendiaryGrenade = 99,
	CMolotovGrenade = 112,
	CMelee = 111,
	CWeaponM3 = 247,
	CKnifeGG = 108,
	CKnife = 107,
	CHEGrenade = 96,
	CFlashbang = 77,
	CFists = 76,
	CWeaponElite = 238,
	CDecoyGrenade = 47,
	CDEagle = 46,
	CWeaponUSP = 271,
	CWeaponM249 = 246,
	CWeaponUMP45 = 270,
	CWeaponTMP = 269,
	CWeaponTec9 = 268,
	CWeaponSSG08 = 266,
	CWeaponSG556 = 264,
	CWeaponSG550 = 262,
	CWeaponScout = 261,
	CWeaponSCAR20 = 260,
	CSCAR17 = 149,
	CWeaponP90 = 258,
	CWeaponP250 = 257,
	CWeaponP228 = 256,
	CWeaponNegev = 254,
	CWeaponMP9 = 253,
	CWeaponMP7 = 252,
	CWeaponMP5Navy = 251,
	CWeaponMag7 = 250,
	CWeaponMAC10 = 249,
	CWeaponM4A1 = 248,
	CWeaponHKP2000 = 245,
	CWeaponGlock = 244,
	CWeaponGalilAR = 243,
	CWeaponGalil = 242,
	CWeaponG3SG1 = 241,
	CWeaponFiveSeven = 240,
	CWeaponFamas = 239,
	CWeaponBizon = 234,
	CWeaponAWP = 232,
	CWeaponAug = 231,
	CAK47 = 1,
	CWeaponCSBaseGun = 236,
	CWeaponCSBase = 235,
	CC4 = 34,
	CBumpMine = 32,
	CBumpMineProjectile = 33,
	CBreachCharge = 28,
	CBreachChargeProjectile = 29,
	CWeaponBaseItem = 233,
	CBaseCSGrenade = 8,
	CSnowballProjectile = 160,
	CSnowballPile = 159,
	CSmokeGrenadeProjectile = 156,
	CSensorGrenadeProjectile = 152,
	CMolotovProjectile = 113,
	CItem_Healthshot = 104,
	CItemDogtags = 106,
	CDecoyProjectile = 48,
	CPhysPropRadarJammer = 126,
	CPhysPropWeaponUpgrade = 127,
	CPhysPropAmmoBox = 124,
	CPhysPropLootCrate = 125,
	CItemCash = 105,
	CEnvGasCanister = 63,
	CDronegun = 50,
	CParadropChopper = 115,
	CSurvivalSpawnChopper = 170,
	CBRC4Target = 27,
	CInfoMapRegion = 102,
	CFireCrackerBlast = 72,
	CInferno = 100,
	CChicken = 36,
	CDrone = 49,
	CFootstepControl = 79,
	CCSGameRulesProxy = 39,
	CWeaponCubemap = 0,
	CWeaponCycler = 237,
	CTEPlantBomb = 210,
	CTEFireBullets = 197,
	CTERadioIcon = 214,
	CPlantedC4 = 128,
	CCSTeam = 43,
	CCSPlayerResource = 41,
	CCSPlayer = 40,
	CPlayerPing = 130,
	CCSRagdoll = 42,
	CTEPlayerAnimEvent = 211,
	CHostage = 97,
	CHostageCarriableProp = 98,
	CBaseCSGrenadeProjectile = 9,
	CHandleTest = 95,
	CTeamplayRoundBasedRulesProxy = 173,
	CSpriteTrail = 165,
	CSpriteOriented = 164,
	CSprite = 163,
	CRagdollPropAttached = 147,
	CRagdollProp = 146,
	CPropCounter = 141,
	CPredictedViewModel = 139,
	CPoseController = 135,
	CGrassBurn = 94,
	CGameRulesProxy = 93,
	CInfoLadderDismount = 101,
	CFuncLadder = 85,
	CTEFoundryHelpers = 200,
	CEnvDetailController = 61,
	CDangerZone = 44,
	CDangerZoneController = 45,
	CWorldVguiText = 274,
	CWorld = 273,
	CWaterLODControl = 230,
	CWaterBullet = 229,
	CVoteController = 228,
	CVGuiScreen = 227,
	CPropJeep = 143,
	CPropVehicleChoreoGeneric = 0,
	CTriggerSoundOperator = 226,
	CBaseVPhysicsTrigger = 22,
	CTriggerPlayerMovement = 225,
	CBaseTrigger = 20,
	CTest_ProxyToggle_Networkable = 222,
	CTesla = 217,
	CBaseTeamObjectiveResource = 17,
	CTeam = 172,
	CSunlightShadowControl = 169,
	CSun = 168,
	CParticlePerformanceMonitor = 117,
	CSpotlightEnd = 162,
	CSpatialEntity = 161,
	CSlideshowDisplay = 154,
	CShadowControl = 153,
	CSceneEntity = 150,
	CRopeKeyframe = 148,
	CRagdollManager = 145,
	CPhysicsPropMultiplayer = 122,
	CPhysBoxMultiplayer = 120,
	CPropDoorRotating = 142,
	CBasePropDoor = 16,
	CDynamicProp = 52,
	CProp_Hallucination = 140,
	CPostProcessController = 136,
	CPointWorldText = 134,
	CPointCommentaryNode = 133,
	CPointCamera = 132,
	CPlayerResource = 131,
	CPlasma = 129,
	CPhysMagnet = 123,
	CPhysicsProp = 121,
	CStatueProp = 166,
	CPhysBox = 119,
	CParticleSystem = 118,
	CMovieDisplay = 114,
	CMaterialModifyControl = 110,
	CLightGlow = 109,
	CItemAssaultSuitUseable = 0,
	CItem = 0,
	CInfoOverlayAccessor = 103,
	CFuncTrackTrain = 92,
	CFuncSmokeVolume = 91,
	CFuncRotating = 90,
	CFuncReflectiveGlass = 89,
	CFuncOccluder = 88,
	CFuncMoveLinear = 87,
	CFuncMonitor = 86,
	CFunc_LOD = 81,
	CTEDust = 192,
	CFunc_Dust = 80,
	CFuncConveyor = 84,
	CFuncBrush = 83,
	CBreakableSurface = 31,
	CFuncAreaPortalWindow = 82,
	CFish = 75,
	CFireSmoke = 73,
	CEnvTonemapController = 69,
	CEnvScreenEffect = 67,
	CEnvScreenOverlay = 68,
	CEnvProjectedTexture = 65,
	CEnvParticleScript = 64,
	CFogController = 78,
	CEnvDOFController = 62,
	CCascadeLight = 35,
	CEnvAmbientLight = 60,
	CEntityParticleTrail = 59,
	CEntityFreezing = 58,
	CEntityFlame = 57,
	CEntityDissolve = 56,
	CDynamicLight = 51,
	CColorCorrectionVolume = 38,
	CColorCorrection = 37,
	CBreakableProp = 30,
	CBeamSpotlight = 25,
	CBaseButton = 5,
	CBaseToggle = 19,
	CBasePlayer = 15,
	CBaseFlex = 12,
	CBaseEntity = 11,
	CBaseDoor = 10,
	CBaseCombatCharacter = 6,
	CBaseAnimatingOverlay = 3,
	CBoneFollower = 26,
	CBaseAnimating = 2,
	CAI_BaseNPC = 0,
	CBeam = 24,
	CBaseViewModel = 21,
	CBaseParticleEntity = 14,
	CBaseGrenade = 13,
	CBaseCombatWeapon = 7,
	CBaseWeaponWorldModel = 23
};

enum ButtonCode_t
{

	BUTTON_CODE_INVALID = -1,
	BUTTON_CODE_NONE = 0,

	KEY_FIRST = 0,

	KEY_NONE = KEY_FIRST,
	KEY_0,
	KEY_1,
	KEY_2,
	KEY_3,
	KEY_4,
	KEY_5,
	KEY_6,
	KEY_7,
	KEY_8,
	KEY_9,
	KEY_A,
	KEY_B,
	KEY_C,
	KEY_D,
	KEY_E,
	KEY_F,
	KEY_G,
	KEY_H,
	KEY_I,
	KEY_J,
	KEY_K,
	KEY_L,
	KEY_M,
	KEY_N,
	KEY_O,
	KEY_P,
	KEY_Q,
	KEY_R,
	KEY_S,
	KEY_T,
	KEY_U,
	KEY_V,
	KEY_W,
	KEY_X,
	KEY_Y,
	KEY_Z,
	KEY_PAD_0,
	KEY_PAD_1,
	KEY_PAD_2,
	KEY_PAD_3,
	KEY_PAD_4,
	KEY_PAD_5,
	KEY_PAD_6,
	KEY_PAD_7,
	KEY_PAD_8,
	KEY_PAD_9,
	KEY_PAD_DIVIDE,
	KEY_PAD_MULTIPLY,
	KEY_PAD_MINUS,
	KEY_PAD_PLUS,
	KEY_PAD_ENTER,
	KEY_PAD_DECIMAL,
	KEY_LBRACKET,
	KEY_RBRACKET,
	KEY_SEMICOLON,
	KEY_APOSTROPHE,
	KEY_BACKQUOTE,
	KEY_COMMA,
	KEY_PERIOD,
	KEY_SLASH,
	KEY_BACKSLASH,
	KEY_MINUS,
	KEY_EQUAL,
	KEY_ENTER,
	KEY_SPACE,
	KEY_BACKSPACE,
	KEY_TAB,
	KEY_CAPSLOCK,
	KEY_NUMLOCK,
	KEY_ESCAPE,
	KEY_SCROLLLOCK,
	KEY_INSERT,
	KEY_DELETE,
	KEY_HOME,
	KEY_END,
	KEY_PAGEUP,
	KEY_PAGEDOWN,
	KEY_BREAK,
	KEY_LSHIFT,
	KEY_RSHIFT,
	KEY_LALT,
	KEY_RALT,
	KEY_LCONTROL,
	KEY_RCONTROL,
	KEY_LWIN,
	KEY_RWIN,
	KEY_APP,
	KEY_UP,
	KEY_LEFT,
	KEY_DOWN,
	KEY_RIGHT,
	KEY_F1,
	KEY_F2,
	KEY_F3,
	KEY_F4,
	KEY_F5,
	KEY_F6,
	KEY_F7,
	KEY_F8,
	KEY_F9,
	KEY_F10,
	KEY_F11,
	KEY_F12,
	KEY_CAPSLOCKTOGGLE,
	KEY_NUMLOCKTOGGLE,
	KEY_SCROLLLOCKTOGGLE,

	KEY_LAST = KEY_SCROLLLOCKTOGGLE,
	KEY_COUNT = KEY_LAST - KEY_FIRST + 1,

	// Mouse
	MOUSE_FIRST = KEY_LAST + 1,

	MOUSE_LEFT = MOUSE_FIRST,
	MOUSE_RIGHT,
	MOUSE_MIDDLE,
	MOUSE_4,
	MOUSE_5,
	MOUSE_WHEEL_UP,				// A fake button which is 'pressed' and 'released' when the wheel is moved up
	MOUSE_WHEEL_DOWN,			// A fake button which is 'pressed' and 'released' when the wheel is moved down

	MOUSE_LAST = MOUSE_WHEEL_DOWN,
	MOUSE_COUNT = MOUSE_LAST - MOUSE_FIRST + 1,

};